scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")
extend type Query {
    # user: [User!]! @paginate
    # user: [User!]! @all
    user(id: ID @eq): User @find
    users: [User!]! @paginate
}

type Mutation {
    createUser(
        name: String!
        email: String!
            @rules(
                apply: ["unique:users,email"]
                messages: [{ rule: "unique", message: "Email Already Exists" }]
            )
        password: String!
            @hash
            @rules(
                apply: ["min:6", "max:16"]
                messages: [
                    {
                        rule: "min"
                        message: "Minimum 6 characters are required"
                    }
                    {
                        rule: "max"
                        message: "Maximum 16 characters are required"
                    }
                ]
            )
    ): User! @create
    updateUser(id: ID!, name: String!, email: String!): User! @update
    deleteUser(id: ID!): User! @delete
    upsertUser(id: ID!, name: String!, email: String!): User! @upsert

    uploadProfilePhoto(profile_photo: Upload!, id: ID!): User!
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post]! @hasMany
}
